---
title: "Daten transformation with dplyr"
format:
  html:
    embed-resources: true
    toc: true
execute:
  warning: false
editor_options: 
  chunk_output_type: console
editor: visual
---

## R-Pakete laden

1. Lade die drei R Pakete: `readr`, `dplyr` und `ggplot2`.

```{r}
library(readr)
library(dplyr)
library(ggplot2)
library(ggthemes)
```

## Daten importieren

### Treibhausgasemissionen im Kanton Zürich

```{r}
treibhausgase <- read_csv("daten/ktzh-treibhausgase.csv")
```

## Daten erkunden

1.  Nutze dir bekannte R Funktionen um die Daten zu erkunden.

```{r}
head(treibhausgase)
glimpse(treibhausgase)
```

## Daten transformieren

Für alle Aufgaben in diesen Übungen, arbeite mit dem Daten Objekt `treibhausgase`.

### Filter nach Hauptgruppe Gebäude

1. Nutze die R Funktion `filter()` um die Daten nach der Hauptgruppen "Gebäude" zu filtern.

2. Führe den Code aus und betrachte die Resultate in der Console.

3. Nutze den Zuweisungsoperator `<-` um das Ergebnis in einem neuen Daten Objekt mit dem Namen `treibhausgase_gebaeude` zu speichern.

4. Führe den Code aus und betrachte die Resultate indem du auf den Namen des Daten Objekts klickst im Fenster oben links unter dem Reiter Environment klickst.

```{r}
treibhausgase_gebaeude <- treibhausgase |> 
    filter(hauptgruppe == "Gebäude")
```

### Filter nach Hauptgruppe Verkehr

1. Nutze die R Funktion `filter()` um die Daten nach der Hauptgruppen "Verkehr" zu filtern.

2. Führe den Code aus und betrachte die Resultate in der Console.

3. Nutze den Zuweisungsoperator `<-` um das Ergebnis in einem neuen Daten Objekt mit dem Namen `treibhausgase_verkehr` zu speichern.

4. Führe den Code aus und betrachte die Resultate indem du auf den Namen des Daten Objekts klickst im Fenster oben links unter dem Reiter Environment klickst.

```{r}
treibhausgase_verkehr <- treibhausgase |> 
    filter(hauptgruppe == "Verkehr")
```

## Daten visualisieren

### Verbundenes Streudiagramm für Gebäude Emissionen

1.  Unten wurde bereits ein Codeblock für dich erstellt. Nutze die Daten `treibhausgase_gebaeude` und die 
Funktion `ggplot()`, um ein verbundenmes Streudiagramm mit `geom_point()` und `geom_line()` zu erstellen. 

Definiere folgende visuellen Eigenschaften:

-   jahr auf der x-Achse;
-   emission auf der y-Achse;
-   untergruppe zur Einfärbung mit dem Argument `color = untergruppe` innerhalb von `aes()`

3.  Führe den Code aus.

4.  Ändere die Farben mit `scale_color_colorblind()`.

5. Nutze ein KI Tool um einen Titel und Untertitel zu dem Diagramm hinzzuzufügen und teile einen Link zu deinem Prompt hier: https://www.perplexity.ai/search/fuge-dem-folgenden-diagramm-ei-IfVKG9CXTwSNIAfqK65YOQ

```{r}

ggplot(data = treibhausgase_gebaeude,
       mapping = aes(x = jahr, 
                     y = emission, 
                     color = untergruppe)) +
    geom_point() +
    geom_path() +
    scale_color_colorblind() +
    labs(title = "Entwicklung der Treibhausgasemissionen im Gebäudesektor",
         subtitle = "Emissionen nach Untergruppen über die Jahre")
```

### Verbundenes Streudiagramm für Verkehr Emissionen

1.  Unten wurde bereits ein Codeblock für dich erstellt. Nutze die Daten `treibhausgase_gebaeude` und die 
Funktion `ggplot()`, um ein verbundenmes Streudiagramm mit `geom_point()` und `geom_line()` zu erstellen. 

Definiere folgende visuellen Eigenschaften:

-   jahr auf der x-Achse;
-   emission auf der y-Achse;
-   untergruppe zur Einfärbung mit dem Argument `color = untergruppe` innerhalb von `aes()`

3.  Führe den Code aus.

4.  Ändere die Farben mit `scale_color_colorblind()`.

```{r}

ggplot(data = treibhausgase_verkehr,
       mapping = aes(x = jahr, 
                     y = emission, 
                     color = untergruppe)) +
    geom_point() +
    geom_path() +
    scale_color_colorblind()
```

