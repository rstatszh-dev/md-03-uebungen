---
title: "Daten transformation with dplyr"
format:
  html:
    embed-resources: true
    toc: true
execute:
  warning: false
editor_options: 
  chunk_output_type: console
editor: visual
---

## R-Pakete laden & Daten importieren

```{r}
library(dplyr)
library(palmerpenguins)
```

### Palmer Pinguine

Die Daten zu den Palmer-Pinguinen enthalten Größenmessungen für drei Pinguinarten, die auf drei Inseln des Palmer-Archipels in der Antarktis beobachtet wurden.

## Tastaturkürzel

Ich habe hier nochmals die wichtigsten Tastaturkürzel für dich hinzugefügt

-   **Einen neuen Code-chunk hinzufügen:** Ctrl + Alt + I
-   **Code "Zeile für Zeile" innerhalb eines Code-chunks ausführen:** Ctrl + Enter
-   **Den gesamten Code-chunk ausführen:** Ctrl + Shift + Enter
-   **Die Pipe (`|>`):** Ctrl + Shift + M
-   **Der Zuweisungs-Operator (\<-)**: Alt + -

## Daten transformieren - Zusammenfassen

### Funktion: `summarise()`

Mit der Funktion `summarise()` wird ein neuer Dataframe erstellt. Der Dataframe enthält eine Spalte für jede angegebene zusammenfassende Statistik. 

```{r}

penguins |> 
  summarise()

penguins |> 
  summarise(n())  # neue Spalte bekommen namen der Funktion

penguins |> 
  summarise(
    count = n(),  # neue Spalte wird benannt
    max_year = max(year) # neue Spalte wird benannt
  )

```

```{r}

penguins |> 
  filter(species == "Chinstrap", island == "Dream") |>  # gefilterter Dataframe wird an summarise weitergegeben
  summarise(anzahl = n())

```

### Funktion: `group_by()`

Die Funktion `group_by()` wird genutzt um einen existierenden Dataframe in einen gruppierten Dataframe zu konvertieren, sodass die folgenden Anweisungen auf der Ebene der Gruppen angewandt werden. Der resultierende Dataframe enthält eine (oder mehrere) Zeilen für jede Kombination von Gruppierungsvariablen, und eine Spalte für jede zusammenfassende Statistik. 

```{r}

penguins |> 
  group_by(species, island)  # beachte Output. Groups: species, island [5]

penguins |> 
  group_by(island, species) |> 
  summarise(count = n()) # Pro Gruppe eine Reihe. Pro Variable eine Spalte im Output.

penguins |> 
  filter(body_mass_g > 3700) |> # Erst filtern, dann zusammenfassen
  group_by(island, species) |> 
  summarise(count = n())

```

### Mit fehlende Werten (NA) umgehen

```{r}

penguins |> 
  group_by(island) |> 
  summarise(
    count = n(),
    mean = mean(bill_depth_mm)  # Datensatz hat NA Werte für bill_depth_mm
  )

penguins |> 
  group_by(island) |> 
  summarise(
    count = n(),
    mean = mean(bill_depth_mm, na.rm = TRUE) # NA werden ignoriert (aber nicht entfernt)
  )

penguins |> 
  filter(!is.na(bill_depth_mm)) |>  # NAs werden entfernt
  group_by(island) |> 
  summarise(
    count = n(),
    mean = mean(bill_depth_mm) # NAs müssen hier nicht mehr ignoriert werden
  )

```
